<?php

namespace Tests\Unit;

use App\Developer;
use App\Language;
use App\ProgrammingLanguage;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Tests\TestCase;

class DeveloperTest extends TestCase
{
    use DatabaseMigrations;
    protected $developer;
    protected $l;
    protected $pl;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->developer = factory(Developer::class)->create();
        $this->l = factory(Language::class)->create();
        $this->pl = factory(ProgrammingLanguage::class)->create();
    }

    /** @test */
    public function create_developer_view()
    {
        $this->get('/developers/create')
            ->assertStatus(200);
    }

    /** @test */
    public function store_a_developer()
    {
        $ids = [1,2];
        // programming language test
        $this->developer
            ->programmingLanguages()->attach($ids);

        $this->assertCount(1,$this->developer
            ->programmingLanguages);

        // language test
        $this->developer
            ->languages()->attach($ids);

        $this->assertCount(1,$this->developer
            ->languages);

    }

    /** @test */
    public function edit_developer_view()
    {
        $this->get('/developers/'.$this->developer->id.'/edit')
            ->assertSee($this->developer->email)
            ->assertStatus(200);
    }

    /** @test */
    public function update_a_developer()
    {
        $ids = [1,2];
        $data = ['email' => 'demo@email.com'];
        $this->developer->update($data);
        $this->assertEquals($this->developer->email, $data['email']); // error: hi@email.com
        // programming language test
        $this->developer
            ->programmingLanguages()->sync($ids);

        $this->assertCount(1,$this->developer
            ->programmingLanguages);

        // language test
        $this->developer
            ->languages()->sync($ids);

        $this->assertCount(1,$this->developer
            ->languages);

    }

    /** @test */
    public function search_developer_using_programming_language()
    {
        $this->get('/developers?pl='.$this->pl->id)
        ->assertStatus(200)
        ->assertSee($this->pl->name);

    }

    /** @test */
    public function search_developer_using_language()
    {
        $this->get('/developers?l='.$this->l->id)
        ->assertStatus(200)
        ->assertSee($this->l->code);

    }

    /** @test */
    public function search_developer_using_programming_language_and_language()
    {
        $this->get('/developers?pl='.$this->pl->id.'&l='.$this->l->id)
        ->assertStatus(200)
        ->assertSee($this->pl->name)
        ->assertSee($this->l->code);
    }

    /** @test */
    public function delete_a_developer()
    {
        $delete = $this->developer->delete();
        $this->assertTrue($delete);
    }
}
